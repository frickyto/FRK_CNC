<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:properties="clr-namespace:CNC.Controls.Properties"
                    xmlns:local="clr-namespace:CNC.Controls;assembly=CNC.Controls.WPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="StandardTheme.xaml"/>
        <ResourceDictionary Source="BlackTheme.xaml"/>
        <ResourceDictionary Source="DarkTheme.xaml"/>
        <ResourceDictionary Source="LightTheme.xaml"/>
        <ResourceDictionary Source="WhiteTheme.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <BitmapImage x:Key="Open" UriSource="/Resources/open.png" />
    <BitmapImage x:Key="OpenWhite" UriSource="/Resources/openWhite.png" />
    <BitmapImage x:Key="Close" UriSource="/Resources/close.png" />
    <BitmapImage x:Key="CloseWhite" UriSource="/Resources/closeWhite.png" />
    <BitmapImage x:Key="Edit" UriSource="/Resources/edit.png" />
    <BitmapImage x:Key="EditWhite" UriSource="/Resources/editWhite.png" />
    <BitmapImage x:Key="Reload" UriSource="/Resources/reload.png" />
    <BitmapImage x:Key="ReloadWhite" UriSource="/Resources/reloadWhite.png" />

    <Style TargetType="{x:Type Window}" x:Key="WindowStyle">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="BorderBrush" Value="{StaticResource StandardPrimary}" />
                <Setter Property="BorderBrush" Value="{StaticResource StandardPrimaryBorderBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource  BlackPrimaryBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BlackPrimaryBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource DarkPrimaryBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightPrimaryBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush }" />
                <Setter Property="BorderBrush" Value="{StaticResource WhiteBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Button radio Button and CheckBox Styles-->
    <Style x:Key="ButtonCustomStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" Name="button">
                        <Grid>
                            <Border BorderThickness="1,1,1,1" BorderBrush="#FF111111" CornerRadius="{Binding ElementName=button, Path=CornerRadius}" Padding="3">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}"></ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="BorderBrush" Value="{StaticResource BlackPrimaryBorderBrush }"></Setter>
                <Setter Property="Background" Value="{StaticResource BlackControlBackGround}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlForeGround}"></Setter>
                <Setter Property="Opacity" Value="{StaticResource BlackOpacity}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="BorderBrush" Value="{StaticResource DarkPrimaryBorderBrush}"></Setter>
                <Setter Property="Background" Value="{StaticResource DarkControlBackGround}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource DarkControlForeGround}"></Setter>
                <Setter Property="Opacity" Value="{StaticResource DarkOpacity}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings},  Path=Base.Theme}" Value="Light" >
                <Setter Property="BorderBrush" Value="{StaticResource LightPrimaryBorderBrush}"></Setter>
                <Setter Property="Background" Value="{StaticResource LightControlBackGround}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource LightControlForeGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="BorderBrush" Value="{StaticResource WhitePrimaryBorderBrush}"></Setter>
                <Setter Property="Background" Value="{StaticResource WhiteControlBackGround}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--<Style TargetType="Button" BasedOn="{StaticResource ButtonCustomStyle}" x:Key="btnSidebar">
    </Style>-->

    <Style x:Key="CaptionButtonStyleDefault" BasedOn="{StaticResource ButtonCustomStyle}" TargetType="Button">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E5E5E5"/>
                <Setter Property="Foreground" Value="#FF111111"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FileButtonStyle" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="3,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="Transparent">
                        <Image Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FileOpen" BasedOn="{StaticResource FileButtonStyle}" TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Content" Value="{DynamicResource Open}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Content" Value="{DynamicResource OpenWhite}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Content" Value="{DynamicResource OpenWhite}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Content" Value="{DynamicResource Open}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Content" Value="{DynamicResource Open}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FileReload" BasedOn="{StaticResource FileButtonStyle}" TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Content" Value="{DynamicResource Reload}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Content" Value="{DynamicResource ReloadWhite}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Content" Value="{DynamicResource ReloadWhite}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Content" Value="{DynamicResource Reload}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Content" Value="{DynamicResource Reload}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FileEdit" BasedOn="{StaticResource FileButtonStyle}" TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Content" Value="{DynamicResource Edit}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Content" Value="{DynamicResource EditWhite}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Content" Value="{DynamicResource EditWhite}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Content" Value="{DynamicResource Edit}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Content" Value="{DynamicResource Edit}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FileClose" BasedOn="{StaticResource FileButtonStyle}" TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Content" Value="{DynamicResource Close}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Content" Value="{DynamicResource CloseWhite}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Content" Value="{DynamicResource CloseWhite}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Content" Value="{DynamicResource Close}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Content" Value="{DynamicResource Close}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="CaptionButtonStyleClose" BasedOn="{StaticResource ButtonCustomStyle}" TargetType="Button">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter  Property="Background" Value="#E81123"/>
                <Setter Property="Foreground" Value="#FFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomToolBarButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"  TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Foreground" Value="{StaticResource BlackControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Foreground" Value="{StaticResource DarkControlBackGround }"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Foreground" Value="{StaticResource LightControlForeGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Foreground" Value="{StaticResource WhitePrimaryBorderBrush }"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackControlBackGround }"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlBackGround }"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkControlBackGround}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource DarkControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush}">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackControlBackGround }"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlBackGround }"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkControlBackGround}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource DarkControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush}">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyleDefault}">
        <Setter Property="Content" Value="&#xE949;"/>
    </Style>

    <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyleDefault}">
        <Setter Property="Content" Value="&#xE739;"/>
    </Style>

    <Style x:Key="RestoreButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyleDefault}">
        <Setter Property="Content" Value="&#xE923;"/>
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyleClose}">
        <Setter Property="Content" Value="&#xE8BB;"/>
    </Style>

    <Style x:Key="ButtonStyleNoHighlighting" BasedOn="{StaticResource CustomToolBarButton}" TargetType="Button" />

    <Style x:Key="ButtonStyleLabel" BasedOn="{StaticResource CustomToolBarButton}" TargetType="Button"/>

    <!--Menu /Menu Items /StatusBar /ToolBar styles-->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}" HorizontalAlignment="Center"  
                            MinWidth="50"  Height="32" BorderThickness="1,1,1,1" BorderBrush="#FF111111" Padding="2" CornerRadius="3,3,0,0">
                        <!--<Border BorderThickness="1,1,1,1" BorderBrush="#FF111111" CornerRadius="{Binding ElementName=tabItem, Path=CornerRadius}" Padding="3">-->
                        <Border.Effect>
                            <DropShadowEffect BlurRadius ="2" ShadowDepth="3" RenderingBias="Performance"/>
                        </Border.Effect>
                        <ContentPresenter ContentSource="Header" Margin="1" HorizontalAlignment="Center" VerticalAlignment="Center"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                            <Setter Property="Background" Value="{StaticResource StandardControlBackGround}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource StandardControlForeGround}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                            <Setter Property="BorderBrush" Value="{StaticResource BlackPrimaryBorderBrush }"></Setter>
                            <Setter Property="Background" Value="{StaticResource BlackControlBackGround}"></Setter>
                            <Setter Property="Opacity" Value="{StaticResource BlackOpacity}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                            <Setter Property="BorderBrush" Value="{StaticResource DarkPrimaryBorderBrush}"></Setter>
                            <Setter Property="Background" Value="{StaticResource DarkControlBackGround}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource DarkControlForeGround}"></Setter>
                            <Setter Property="Opacity" Value="{StaticResource DarkOpacity}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings},  Path=Base.Theme}" Value="Light" >
                            <Setter Property="BorderBrush" Value="{StaticResource LightPrimaryBorderBrush}"></Setter>
                            <Setter Property="Background" Value="{StaticResource LightControlBackGround}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource LightControlForeGround}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                            <Setter Property="BorderBrush" Value="{StaticResource WhitePrimaryBorderBrush}"></Setter>
                            <Setter Property="Background" Value="{StaticResource WhiteControlBackGround}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource WhiteControlForeGround}"></Setter>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainMenuStyle" TargetType="{x:Type MenuItem}">
        <Style.Triggers>

            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackControlBackGround}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlForeGround}"></Setter>
                <Setter Property="Opacity" Value="{StaticResource BlackOpacity}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkControlBackGround}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource DarkControlForeGround}"></Setter>
                <Setter Property="Opacity" Value="{StaticResource DarkOpacity}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightControlBackGround}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource LightControlForeGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteControlBackGround}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource WhiteControlForeGround}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style  x:Key="CustomItemControl" TargetType="{x:Type ItemsControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Background" Value="{StaticResource StandardPrimary}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource StandardControlForeGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="Transparent"></Setter>
                <!--<Setter Property="Foreground" Value="{StaticResource BlackControlBackGround}"></Setter>-->
                <Setter Property="Opacity" Value="{StaticResource BlackOpacity}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <!--<Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>-->
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="Opacity" Value="{StaticResource DarkOpacity}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="Opacity" Value="{StaticResource LightOpacity}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="Transparent"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Background" Value="{StaticResource StandardControlBackGround}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource StandardControlForeGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush}">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource  WhiteBrush}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToolBarTray}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Background" Value= "{StaticResource StandardControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value= "{StaticResource BlackPrimaryBrush}"></Setter>

            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value= "{StaticResource LightPrimaryBrush}">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteControlBackGround}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToolBar}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Background" Value= "#FFEEF5FD"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource  BlackPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlBackGround}"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource DarkControlBackGround }"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource LightControlForeGround}"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource WhiteControlForeGround}"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Background" Value= "{StaticResource StandardControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource  StandardPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource  BlackPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource DarkControlBackGround }"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush}">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style  TargetType="{x:Type TabControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Background" Value="{StaticResource StandardPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush }">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomTabControl" TargetType="{x:Type TabControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Background" Value="{StaticResource StandardPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush }">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="customTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}" HorizontalAlignment="Center"  
                            MinWidth="50"  Height="32" BorderThickness="1,1,1,1" BorderBrush="#FF111111" Padding="2" CornerRadius="3,3,0,0">
                        <!--<Border BorderThickness="1,1,1,1" BorderBrush="#FF111111" CornerRadius="{Binding ElementName=tabItem, Path=CornerRadius}" Padding="3">-->
                        <Border.Effect>
                            <DropShadowEffect  BlurRadius ="2" ShadowDepth="3"  RenderingBias="Performance"/>
                        </Border.Effect>
                        <ContentPresenter ContentSource="Header"  Margin="1"  HorizontalAlignment="Center" VerticalAlignment="Center"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                            <Setter Property="Background" Value="{StaticResource StandardTabControl}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource StandardControlForeGround}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                            <Setter Property="BorderBrush" Value="{StaticResource BlackControlForeGround }"></Setter>
                            <Setter Property="Background" Value="{StaticResource BlackControlBackGround}"></Setter>
                            <Setter Property="Opacity" Value="{StaticResource BlackOpacity}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                            <Setter Property="BorderBrush" Value="{StaticResource DarkPrimaryBorderBrush}"></Setter>
                            <Setter Property="Background" Value="{StaticResource DarkControlBackGround}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource DarkControlForeGround}"></Setter>
                            <Setter Property="Opacity" Value="{StaticResource DarkOpacity}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings},  Path=Base.Theme}" Value="Light" >
                            <Setter Property="BorderBrush" Value="{StaticResource LightPrimaryBorderBrush}"></Setter>
                            <Setter Property="Background" Value="{StaticResource LightControlBackGround}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource LightControlForeGround}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                            <Setter Property="BorderBrush" Value="{StaticResource WhitePrimaryBorderBrush}"></Setter>
                            <Setter Property="Background" Value="{StaticResource WhiteControlBackGround}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource WhiteControlForeGround}"></Setter>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="PART_Border" Property="Opacity" Value=".8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style Panels /GroupBoxes-->
    <Style x:Key="CustomStackPanel" TargetType="{x:Type StackPanel}">
        <Style.Triggers>

            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush}">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DockPanel}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Background" Value="{StaticResource StandardControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush }"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlBackGround }"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource DarkControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush}">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomGroupBox"  TargetType="{x:Type GroupBox}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <!--<Setter Property="Background" Value="{StaticResource BlackPrimaryBrush}"></Setter>-->
                <Setter Property="Foreground" Value="{StaticResource StandardControlForeGround }"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <!--<Setter Property="Background" Value="{StaticResource BlackPrimaryBrush}"></Setter>-->
                <Setter Property="Foreground" Value="{StaticResource BlackControlBackGround }"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <!--Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>-->
                <Setter Property="Foreground" Value="{StaticResource DarkControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <!--<Setter Property="Background" Value="{StaticResource LightPrimaryBrush}"></Setter>-->
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <!--<Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>-->
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TreeView}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlBackGround }"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource DarkControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource LightControlForeGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource WhiteControlForeGround}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--TextBox/Block labels Styles-->
    <Style x:Key="TextBox" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackControlBackGround}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlForeGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkControlBackGround }"></Setter>
                <Setter Property="Foreground" Value="{StaticResource DarkControlForeGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightWhiteBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource LightControlForeGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource WhiteControlForeGround}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomTextBlock" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource DarkControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource LightControlForeGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource WhiteControlForeGround}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Label}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlBackGround}"></Setter>
                <Setter Property="FontWeight" Value="Bold"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="Foreground" Value="{StaticResource DarkControlBackGround}"></Setter>
                <Setter Property="FontWeight" Value="Normal"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="Transparent">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="Transparent"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomLabel" TargetType="{x:Type Label}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource BlackControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource DarkControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush}">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Canvas}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Standard">
                <Setter Property="Background" Value="{StaticResource StandardControlBackGround}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Black">
                <Setter Property="Background" Value="{StaticResource BlackPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Dark">
                <Setter Property="Background" Value="{StaticResource DarkPrimaryBrush}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="Light">
                <Setter Property="Background" Value="{StaticResource LightPrimaryBrush}">
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static local:AppConfig.Settings}, Path=Base.Theme}" Value="White">
                <Setter Property="Background" Value="{StaticResource WhiteBrush}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
